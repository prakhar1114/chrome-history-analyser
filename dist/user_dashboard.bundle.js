/*! For license information please see user_dashboard.bundle.js.LICENSE.txt */
(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(){e=function(){return n};var r,n={},o=Object.prototype,a=o.hasOwnProperty,i=Object.defineProperty||function(t,e,r){t[e]=r.value},c="function"==typeof Symbol?Symbol:{},u=c.iterator||"@@iterator",l=c.asyncIterator||"@@asyncIterator",s=c.toStringTag||"@@toStringTag";function h(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{h({},"")}catch(r){h=function(t,e,r){return t[e]=r}}function f(t,e,r,n){var o=e&&e.prototype instanceof w?e:w,a=Object.create(o.prototype),c=new N(n||[]);return i(a,"_invoke",{value:_(t,r,c)}),a}function d(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}n.wrap=f;var p="suspendedStart",y="suspendedYield",v="executing",m="completed",g={};function w(){}function b(){}function L(){}var x={};h(x,u,(function(){return this}));var E=Object.getPrototypeOf,S=E&&E(E(T([])));S&&S!==o&&a.call(S,u)&&(x=S);var k=L.prototype=w.prototype=Object.create(x);function j(t){["next","throw","return"].forEach((function(e){h(t,e,(function(t){return this._invoke(e,t)}))}))}function O(e,r){function n(o,i,c,u){var l=d(e[o],e,i);if("throw"!==l.type){var s=l.arg,h=s.value;return h&&"object"==t(h)&&a.call(h,"__await")?r.resolve(h.__await).then((function(t){n("next",t,c,u)}),(function(t){n("throw",t,c,u)})):r.resolve(h).then((function(t){s.value=t,c(s)}),(function(t){return n("throw",t,c,u)}))}u(l.arg)}var o;i(this,"_invoke",{value:function(t,e){function a(){return new r((function(r,o){n(t,e,r,o)}))}return o=o?o.then(a,a):a()}})}function _(t,e,n){var o=p;return function(a,i){if(o===v)throw Error("Generator is already running");if(o===m){if("throw"===a)throw i;return{value:r,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var u=C(c,n);if(u){if(u===g)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===p)throw o=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=v;var l=d(t,e,n);if("normal"===l.type){if(o=n.done?m:y,l.arg===g)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(o=m,n.method="throw",n.arg=l.arg)}}}function C(t,e){var n=e.method,o=t.iterator[n];if(o===r)return e.delegate=null,"throw"===n&&t.iterator.return&&(e.method="return",e.arg=r,C(t,e),"throw"===e.method)||"return"!==n&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var a=d(o,t.iterator,e.arg);if("throw"===a.type)return e.method="throw",e.arg=a.arg,e.delegate=null,g;var i=a.arg;return i?i.done?(e[t.resultName]=i.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=r),e.delegate=null,g):i:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,g)}function P(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function F(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function N(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(P,this),this.reset(!0)}function T(e){if(e||""===e){var n=e[u];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function t(){for(;++o<e.length;)if(a.call(e,o))return t.value=e[o],t.done=!1,t;return t.value=r,t.done=!0,t};return i.next=i}}throw new TypeError(t(e)+" is not iterable")}return b.prototype=L,i(k,"constructor",{value:L,configurable:!0}),i(L,"constructor",{value:b,configurable:!0}),b.displayName=h(L,s,"GeneratorFunction"),n.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,L):(t.__proto__=L,h(t,s,"GeneratorFunction")),t.prototype=Object.create(k),t},n.awrap=function(t){return{__await:t}},j(O.prototype),h(O.prototype,l,(function(){return this})),n.AsyncIterator=O,n.async=function(t,e,r,o,a){void 0===a&&(a=Promise);var i=new O(f(t,e,r,o),a);return n.isGeneratorFunction(e)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},j(k),h(k,s,"Generator"),h(k,u,(function(){return this})),h(k,"toString",(function(){return"[object Generator]"})),n.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},n.values=T,N.prototype={constructor:N,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=r,this.done=!1,this.delegate=null,this.method="next",this.arg=r,this.tryEntries.forEach(F),!t)for(var e in this)"t"===e.charAt(0)&&a.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=r)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(n,o){return c.type="throw",c.arg=t,e.next=n,o&&(e.method="next",e.arg=r),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],c=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var u=a.call(i,"catchLoc"),l=a.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!l)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&a.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),F(r),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;F(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:T(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=r),g}},n}function r(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function n(){return o.apply(this,arguments)}function o(){var t;return t=e().mark((function t(){var r,n;return e().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,ai.summarizer.capabilities();case 2:if(!(r=t.sent)||"no"===r.available){t.next=19;break}if("readily"!==r.available){t.next=11;break}return t.next=7,ai.summarizer.create();case 7:n=t.sent,console.log("summarizer ready now"),t.next=17;break;case 11:return t.next=13,ai.summarizer.create();case 13:return(n=t.sent).addEventListener("downloadprogress",(function(t){console.log(t.loaded,t.total)})),t.next=17,n.ready;case 17:t.next=21;break;case 19:throw console.log("Feature not supported"),new Error("Feature not supported");case 21:return t.abrupt("return",n);case 22:case"end":return t.stop()}}),t)})),o=function(){var e=this,n=arguments;return new Promise((function(o,a){var i=t.apply(e,n);function c(t){r(i,o,a,c,u,"next",t)}function u(t){r(i,o,a,c,u,"throw",t)}c(void 0)}))},o.apply(this,arguments)}function a(){a=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},c="function"==typeof Symbol?Symbol:{},u=c.iterator||"@@iterator",l=c.asyncIterator||"@@asyncIterator",s=c.toStringTag||"@@toStringTag";function h(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{h({},"")}catch(t){h=function(t,e,r){return t[e]=r}}function f(t,e,r,n){var a=e&&e.prototype instanceof w?e:w,i=Object.create(a.prototype),c=new N(n||[]);return o(i,"_invoke",{value:_(t,r,c)}),i}function d(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=f;var p="suspendedStart",y="suspendedYield",v="executing",m="completed",g={};function w(){}function b(){}function L(){}var x={};h(x,u,(function(){return this}));var E=Object.getPrototypeOf,S=E&&E(E(T([])));S&&S!==r&&n.call(S,u)&&(x=S);var k=L.prototype=w.prototype=Object.create(x);function j(t){["next","throw","return"].forEach((function(e){h(t,e,(function(t){return this._invoke(e,t)}))}))}function O(t,e){function r(o,a,c,u){var l=d(t[o],t,a);if("throw"!==l.type){var s=l.arg,h=s.value;return h&&"object"==i(h)&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){r("next",t,c,u)}),(function(t){r("throw",t,c,u)})):e.resolve(h).then((function(t){s.value=t,c(s)}),(function(t){return r("throw",t,c,u)}))}u(l.arg)}var a;o(this,"_invoke",{value:function(t,n){function o(){return new e((function(e,o){r(t,n,e,o)}))}return a=a?a.then(o,o):o()}})}function _(e,r,n){var o=p;return function(a,i){if(o===v)throw Error("Generator is already running");if(o===m){if("throw"===a)throw i;return{value:t,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var u=C(c,n);if(u){if(u===g)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===p)throw o=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=v;var l=d(e,r,n);if("normal"===l.type){if(o=n.done?m:y,l.arg===g)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(o=m,n.method="throw",n.arg=l.arg)}}}function C(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,C(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var a=d(o,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,g;var i=a.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function P(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function F(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function N(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(P,this),this.reset(!0)}function T(e){if(e||""===e){var r=e[u];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}throw new TypeError(i(e)+" is not iterable")}return b.prototype=L,o(k,"constructor",{value:L,configurable:!0}),o(L,"constructor",{value:b,configurable:!0}),b.displayName=h(L,s,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,L):(t.__proto__=L,h(t,s,"GeneratorFunction")),t.prototype=Object.create(k),t},e.awrap=function(t){return{__await:t}},j(O.prototype),h(O.prototype,l,(function(){return this})),e.AsyncIterator=O,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new O(f(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},j(k),h(k,s,"Generator"),h(k,u,(function(){return this})),h(k,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=T,N.prototype={constructor:N,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(F),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return c.type="throw",c.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),l=n.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!l)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),F(r),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;F(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:T(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function c(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function u(t){return function(){var e=this,r=arguments;return new Promise((function(n,o){var a=t.apply(e,r);function i(t){c(a,n,o,i,u,"next",t)}function u(t){c(a,n,o,i,u,"throw",t)}i(void 0)}))}}var l,s;function h(t){var e=new Date;switch(t){case"24h":(l=new Date(e)).setDate(e.getDate()-1),s=e;break;case"1w":(l=new Date(e)).setDate(e.getDate()-7),s=e;break;case"1m":(l=new Date(e)).setMonth(e.getMonth()-1),s=e;break;case"3m":(l=new Date(e)).setMonth(e.getMonth()-3),s=e;break;case"6m":(l=new Date(e)).setMonth(e.getMonth()-6),s=e;break;case"jan":l=new Date(e.getFullYear(),0,1),s=new Date(e.getFullYear(),1,0);break;case"feb":l=new Date(e.getFullYear(),1,1),s=new Date(e.getFullYear(),2,0);break;case"mar":l=new Date(e.getFullYear(),2,1),s=new Date(e.getFullYear(),3,0);break;default:l=e,s=e}var r=function(t){var e=t.getFullYear(),r=("0"+(t.getMonth()+1)).slice(-2),n=("0"+t.getDate()).slice(-2);return"".concat(e,"-").concat(r,"-").concat(n)};document.getElementById("display-start-date").textContent=r(l),document.getElementById("display-end-date").textContent=r(s)}function f(){for(var t=p("recent-history","Recent History");t.lastChild&&t.lastChild.id&&t.lastChild.id.includes("contents");)t.removeChild(t.lastChild);(function(){return m.apply(this,arguments)})().then((function(e){t.appendChild(e)}))}function d(){for(var t=p("basic-summary","Summary");t.lastChild&&t.lastChild.id&&t.lastChild.id.includes("contents");)t.removeChild(t.lastChild);(function(){return g.apply(this,arguments)})().then((function(e){t.appendChild(e)}))}function p(t,e){if(document.getElementById(t))return document.getElementById(t);var r=document.querySelector(".widget-container"),n=document.createElement("div");return n.className="widget resizable",n.id=t,n.innerHTML='\n      <div class="widget-header">\n          <h2>'.concat(e,'</h2>\n          <div class="resize-handle"></div>\n      </div>\n  '),r.appendChild(n),n}function y(){f(),d()}function v(t){var e=String.fromCharCode(97+Math.floor(26*Math.random()));return new Promise((function(r,n){chrome.history.search({text:e,maxResults:t,startTime:l.getTime(),endTime:s.getTime()},(function(t){chrome.runtime.lastError?n(chrome.runtime.lastError):(console.log(t),r(t))}))}))}function m(){return(m=u(a().mark((function t(){return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",v(10).then((function(t){var e=document.createElement("ul");return e.id="recent-history-contents",t.forEach((function(t){var r=document.createElement("li");r.innerHTML='<a href="'.concat(t.url,'" target="_blank">').concat(t.title||w(t.url),"</a>"),e.appendChild(r)})),e})));case 1:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function g(){return(g=u(a().mark((function t(){var e,r,o,i,c;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,v(40);case 2:return e=t.sent,console.log(e),(r=document.createElement("p")).id="basic-summary-contents",o=e.map((function(t){return t.title||w(t.url)})).join("\n"),t.next=9,n();case 9:return i=t.sent,t.next=12,i.summarize(o);case 12:return c=t.sent,console.log(c),r.innerHTML=c.replace(/\*\*(.+?)\*\*/g,"<strong>$1</strong>").replace(/\*(.+?)\*/g,"<em>$1</em>").replace(/^\* (.+)$/gm,"<li>$1</li>").replace(/(<li>.*<\/li>)/g,"<ul>$1</ul>"),t.abrupt("return",r);case 16:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function w(t){return new URL(t).hostname}document.addEventListener("DOMContentLoaded",(function(){var t,e,r;t=[{label:"Last 24 Hours",range:"24h"},{label:"Last Week",range:"1w"},{label:"Last Month",range:"1m"},{label:"Last 3 Months",range:"3m"},{label:"Last 6 Months",range:"6m"},{label:"January",range:"jan"},{label:"February",range:"feb"},{label:"March",range:"mar"}],e=document.querySelector(".date-range-container"),t.forEach((function(t){var r=document.createElement("button");r.className="date-range-button",r.textContent=t.label,r.setAttribute("data-range",t.range),"24h"===t.range&&r.classList.add("selected"),r.addEventListener("click",(function(){h(t.range),y(),document.querySelectorAll(".date-range-button").forEach((function(t){t.classList.remove("selected")})),r.classList.add("selected")})),e.appendChild(r)})),(r=document.createElement("button")).id="refresh-button",r.textContent="Refresh",document.querySelector(".date-range-container").appendChild(r),h("24h"),f(),d(),document.querySelectorAll(".resizable").forEach((function(t){var e=t.querySelector(".resize-handle"),r=!1;e.addEventListener("mousedown",(function(e){e.preventDefault(),r=!0,document.body.style.cursor="se-resize",t.classList.add("resizing");var n=t.offsetWidth,o=t.offsetHeight,a=e.clientX,c=e.clientY,u=function(e){if(r){var i=n+(e.clientX-a),u=o+(e.clientY-c);t.style.width="".concat(Math.max(i,200),"px"),t.style.height="".concat(Math.max(u,100),"px")}},l=function(){var e,n,o,a;r=!1,document.body.style.cursor="default",t.classList.remove("resizing"),window.removeEventListener("mousemove",u),window.removeEventListener("mouseup",l),e=t.id,n=t.style.width,o=t.style.height,a={width:n,height:o},chrome&&chrome.storage&&chrome.storage.local?chrome.storage.local.set(function(t,e,r){return(e=function(t){var e=function(t){if("object"!=i(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var r=e.call(t,"string");if("object"!=i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==i(e)?e:e+""}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}({},e,a),(function(){console.log("Saved size for ".concat(e,":"),a)})):localStorage.setItem(e,JSON.stringify(a))};window.addEventListener("mousemove",u),window.addEventListener("mouseup",l)})),function(t,e){if(chrome&&chrome.storage&&chrome.storage.local)chrome.storage.local.get(t,(function(r){r[t]&&(e.style.width=r[t].width,e.style.height=r[t].height)}));else{var r=JSON.parse(localStorage.getItem(t));r&&(e.style.width=r.width,e.style.height=r.height)}}(t.id,t)})),document.getElementById("refresh-button").addEventListener("click",(function(){y()}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,